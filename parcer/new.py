import json
import time
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager
from textblob import TextBlob

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Selenium –¥–ª—è Chrome
service = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=service)

# –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –¥–æ—Ä–∞–º
driver.get("https://dorama.land/calendar")

dorama_data = []  # –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Ä–∞–º–∞—Ö

def analyze_sentiment(review_text):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –æ—Ç–∑—ã–≤–∞: –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π"""
    analysis = TextBlob(review_text)
    return "–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π" if analysis.sentiment.polarity > 0 else "–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π"

# –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
try:
    schedule_elements = WebDriverWait(driver, 10).until(
        EC.presence_of_all_elements_located((By.CSS_SELECTOR, "div.switch > a"))
    )

    print("\nüìÖ –ù–∞–π–¥–µ–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–æ—Ä–∞–º:")
    for month in schedule_elements:
        print("-", month.text)

    # –°–æ–±–∏—Ä–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –¥–æ—Ä–∞–º—ã
    dorama_links = [month.get_attribute("href") for month in schedule_elements if month.get_attribute("href")]

    # –ü–∞—Ä—Å–∏–º –∫–∞–∂–¥—É—é –¥–æ—Ä–∞–º—É
    for index, link in enumerate(dorama_links):
        print(f"\nüîç –ü–∞—Ä—Å–∏–º –¥–æ—Ä–∞–º—É {index + 1}/{len(dorama_links)}: {link}")
        driver.get(link)
        time.sleep(3)  # –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã

        try:
            # –ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ—Ä–∞–º—ã
            title = WebDriverWait(driver, 10).until(
                EC.presence_of_element_located((By.TAG_NAME, "h1"))
            ).text.strip()

            # –û—Ç–∑—ã–≤—ã
            review_elements = driver.find_elements(By.CSS_SELECTOR, "div.comment-content div.comment-footer div.review-serial-rate")
            reviews = [review.text for review in review_elements] if review_elements else []

            # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –æ—Ç–∑—ã–≤–æ–≤
            good_reviews = [review for review in reviews if analyze_sentiment(review) == "–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π"]
            bad_reviews = [review for review in reviews if analyze_sentiment(review) == "–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π"]

            # –û–∑–≤—É—á–∫–∏
            sound_elements = driver.find_elements(By.CSS_SELECTOR, "#field-sound ul > li")
            ozvuchki = [sound.text for sound in sound_elements] if sound_elements else []

            # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–ø–∏—Å–æ–∫
            dorama_data.append({
                "–ù–∞–∑–≤–∞–Ω–∏–µ": title,
                "–°—Å—ã–ª–∫–∞": link,
                "–û–∑–≤—É—á–∫–∏": ozvuchki,
                "–û—Ç–∑—ã–≤—ã": {
                    "–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ": good_reviews,
                    "–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ": bad_reviews
                }
            })

            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–ø–∞—Ä—Å–∏–ª–∏: {title}")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã {link}: {e}")

except Exception as e:
    print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:", e)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ JSON
with open("dorama_data.json", "w", encoding="utf-8") as file:
    json.dump(dorama_data, file, ensure_ascii=False, indent=4)

print("\n‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ dorama_data.json")

# –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
driver.quit()
